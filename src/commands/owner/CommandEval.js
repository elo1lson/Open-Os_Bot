const { MessageActionRow, MessageSelectMenu } = require('discord.js');
const Command = require('../../structures/command/command.js')
module.exports = new Command({
	name: 'sr',
	aliases: ['mn'],
	author: 'tomori',
	run: async (client, message, args, prefix, cor) => {
		if (!args[0]) {
			return message.channel.send(`**|** ${message.author}, insira um valor para executar o eval.`);}
		await message.channel.send(`**|** Executando...`).then(async m => {
			try {
				let beforeRunning = Date.now(); // Define a data de execuÃ§Ã£o
				let result = eval(args.join(' ')); // Gera os argumentos do eval

				if (result instanceof Promise) {
					m.edit('O cÃ³digo retornou uma promise - aguardando ela ser resolvida...')
					await result
				}; // Se retorna Promise, ele enviarÃ¡ o recado

				if (typeof result !== 'string') result = require('util').inspect(result); // Se retornar uma string, ele enviarÃ¡ o recado
				let end = (Date.now() - beforeRunning); // Define o final do tempo

				let embed = new Discord.MessageEmbed(message.author)
					.setTimestamp()
					.setAuthor(`FunÃ§Ã£o executada por ${message.author.username}`)
					.setColor(cor)
					.addField('ğŸ“© Entrada', `\`\`\`js\n${args.join(" ")}\`\`\``)
					.addField('ğŸš© SaÃ­da', `\`\`\`js\n${result.slice(0, 1010)}\n\`\`\``)

				if (result.length > 1010) embed.addField('ğŸš© ContinuaÃ§Ã£o do Resultado', `\`\`\`js\n${result.slice(1010, 2020)}\n\`\`\``); // Se o eval for maior que os 1010 de caracteris, ele adicionarÃ¡ um field

				m.edit(`**|** ${message.author}, vocÃª teve sucesso ao executar o cÃ³digo!`, { embed: embed }); // NotificarÃ¡ ao usuÃ¡rio sobe o eval
			} catch (e) {
				let embed = new Discord.MessageEmbed(message.author)
					.setTimestamp()
					.setAuthor(`FunÃ§Ã£o executada por ${message.author.username}`)
					.setDescription('```js\n' + e.stack.slice(0, 2000) + '```')
					.setColor(cor)
				m.edit(`**|** ${message.author}, vocÃª teve falha ao executar o cÃ³digo!`, { embed: embed }); // NotificarÃ¡ ao usuÃ¡rio sobre o erro no eval
			}; // Caso ocorra um erro, ele irÃ¡ retornar essa aÃ§Ã£o
		});
} // Executa p cÃ³digo do comando // Exporta o comando com todas as configuraÃ§Ãµes e informaÃ§Ãµes
})

/*
const Discord = require("discord.js"); // Exporta a dependÃªncia da discord.js
const firebase = require("firebase"); // Exporta a dependÃªncia do firebase
const fs = require("fs"); // Exporta a dependÃªncia do fs(File System)
const generatePassword = require("generate-password"); // Exporta a dependÃªncia do generate-password
const fetch = require("node-fetch"); // Exporta a dependÃªncia do node-fetch
const client_neko = require("nekos.life"); // Exporta a dependÃªncia da Nekos Life
const database = firebase.database(); // Exporta a funÃ§Ã£o de database do firebase
const neko = new client_neko(); // Cria um cliente para guscar na api da nekos
*/
